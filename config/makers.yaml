# YAML file describing the data (almost like a schema)

# RHS words that look like type descriptions usually are type
# descriptions, but it's not really a DB schema; these are directions
# to the programs on what to do with these fields.

# The config data is kept as YAML rather than inside the mongodb
# database, so it can be version-controlled under git etc.

# These make up bitmaps, which should fit into a Python integer, so
# assuming 7 days, you can have up to four time slots per day even on
# a 32-bit system.  A timeslots bitmap is part of a user's profile,
# and each event instance (e.g. a training session) has a time, so the
# system can work out who to offer slots to when a training session
# becomes available.

timeslots:
  days:
    - Monday
    - Tuesday
    - Wednesday
    - Thursday
    - Friday
    - Saturday
    - Sunday
  periods:
    Morning:   07:00 -- 12:30
    Afternoon: 13:00 -- 18:00
    Evening:   18:30 -- 22:00

# This section defines the names that can be used as locations in the
# "events" and "equipment_classes" sections

locations:
  main_space:
    name: Main space
  classroom:
    name: Classroom
    capacity:
      tables: 30
      seated: 60
  trove:
    name: Trove
  office:
    name: Office
  workshop:
    name: Secure workshop
  craft_room:
    name: Craft room
  corridor:
    name: Corridor
  kitchen:
    name: Cakespace

training:
  default_max_requests: 3
  no_shows_limit:       2

page:
  stylesheet:   /usr/local/share/makers/makers.css
  script_file:  /usr/local/share/makers/makers.js
  style_inline: True
  help_texts:   /usr/local/share/makers/help_texts
  heading_logo: static/logo.png
  # preamble:
  # postamble:  <p>Bottom navigation bar etc will go here.</p>
  motd_file:    config/motd.html

# These are presented in the order given by "profile_group_order"; any
# groups not mentioned in that will not be presented:

profile_fields:
  Address:
    - Telephone
    - Street 1
    - Street 2
    - Street 3
    - City
    - County
    - Country
    - Postcode
    - ICBM
  Demographics:
    - Birth year
    - Gender
    - Education / training main subject
    - Education / training level
    - Is your use of the space connected with your work?
    - Is your use of the space connected with the area of your main training?
  Main Badger:
    - First line
    - Second line
  Storage Badger:
    - First line
    - Second line

profile_group_order:
  - Address
  - Demographics
  - Main Badger
  - Storage Badger

privacy_defaults:
  visibility_as_host:       True
  visibility_as_attendee:   True
  visibility_in_general:    False
  
interest_areas:
  - Biohacking
  - Civic engineering
  - Clothes-making and modification
  - Electro-mechanical engineering
  - Electronic engineering
  - Environmental science
  - Fine arts
  - Flying things (drones, model aircraft, HAB, rocketry)
  - Historic technology
  - Home automation
  - Jewellery and ornament making
  - Lifehacking
  - Mechanical engineering
  - Metalwork
  - Optics
  - Pottery
  - Programming (general)
  - Programming (embedded)
  - Renewables
  - Sculpture and carving
  - Sewing, knitting, chrocheting, macrame, weaving, spinning etc
  - Steampunk
  - STEM outreach and public engagement
  - Wearable computing
  - Woodwork

dietary_avoidances:
  - Kosher
  - Halal
  - Vegetarian
  - Vegan
  - Nut allergy
  - No gluten
  - Low Carb
  - Low Sugar

database:
  URI:
  database_name: Makespace
  collections:
    people:          MakespacePeople
    profiles:        MakespaceProfiles
    equipment_types: MakespaceEquipmentTypes
    machines:        MakespaceMachines
    machine_logs:    MakespaceMachineLogs
    events:          MakespaceEvents
    event_templates: MakespaceEventTemplates
    notifications:   MakespaceNotifications
    announcements:   MakespaceAnnouncements

# The names in this section indicate which equipment class names
# are magical

organization:
  # Being trained on the equipment class named here means being
  # inducted; being a trainer on it means being an inductor.
  name:          makespace
  title:         Makespace
  # Being a trained user on the equipment class named here gives you
  # read access to the database; being an owner on it gives you write access
  database:      makespace_admin_db
  # Being a trained user on the equipment class named here gives you
  # write access to the announcements system
  announcements: noticeboard
  home_page:     http://www.makespace.org/
  wiki:          http://wiki.makespace.org/
  categories:    http://wiki.makespace.org/Equipment/ToolClasses#
  forum:         https://groups.google.com/forum/#!forum/cammakespace

server:
  mailhost:       makespace.org
  # base_url:       https://makers.makespace.org/
  base_url:       http://fragaria:8000/ # todo: use a django mechanism for this
  # todo: use django's "reverse" instead of these:`
  login:          login
  update_profile: update_profile/
  update_mugshot: update_mugshot/
  rsvp_form:      events/rsvp_form/
  rsvp:           events/rsvp/
  users:          dashboard/
  machines:       equipment/
  types:          equiptypes/
  events:         event/
  admin:          admin/
  userapi:        api/users/
  head_preamble:  head.html

messages:
  templates_directory: /usr/local/share/makers/message_templates
